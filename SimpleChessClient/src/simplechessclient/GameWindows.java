package simplechessclient;

import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javax.swing.GroupLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JSeparator;
import javax.swing.LayoutStyle;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;
/**
 * A class that contains windows that come up during the game
 * @author Jed Wang
 */
public class GameWindows {
    /**
     * A Window that contains the time control of the game.
     */
    private static class TimeWindow extends JFrame {
        /** 
         * Creates new form TimeWindow. 
         * @param tc the TimeControl
         */
        public TimeWindow(TimeControl tc) {
            initComponents(tc);
        }

        /** This method is called from within the constructor to
         * initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
        private void initComponents(TimeControl tc) {
            jLabel = new JLabel();
            
            tc.addChangeListener(
                    (ChangeListener) (ObservableValue observable, Object oldValue, Object newValue) -> {
                jLabel.setText(tc.toString());
            });

            setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
            setTitle("Timers");
            setResizable(false);

            jLabel.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
            jLabel.setText("0:00.0|0:00.0");
            jLabel.setToolTipText("");

            GroupLayout layout = new GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel)
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel)
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>
        
        private JLabel jLabel;                
    }

    /**
     * Creates and shows a TimeWindow
     * @param tc the TimeControl
     * @return the TimeWindow
     */
    public static JFrame showTimeWindow(TimeControl tc) {
        //<editor-fold defaultstate="collapsed" desc="Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.LookAndFeelInfo[] installedLookAndFeels=UIManager.getInstalledLookAndFeels();
            for(UIManager.LookAndFeelInfo installedLookAndFeel : installedLookAndFeels) {
                if("Nimbus".equals(installedLookAndFeel.getName())) {
                    UIManager.setLookAndFeel(installedLookAndFeel.getClassName());
                    break;
                }
            }
        } catch(ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        JFrame frame = new GameWindows.TimeWindow(tc);
        frame.setSize(277, frame.getHeight());
        
        java.awt.EventQueue.invokeLater(() -> {
            frame.setVisible(true);
        });
        
        System.out.println("(" + frame.getWidth() + ")");
        
        return frame;
    }
    
    /**
     * A Window that displays the name of you or your opponent.
     */
    private static class NameWindow extends JFrame {
    
        /** Creates new form NameWindow */
        public NameWindow(String name, boolean isYou) {
            initComponents(name, isYou);
        }

        /** This method is called from within the constructor to
         * initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
        private void initComponents(String name, boolean isYou) {
            nameLabel = new JLabel();
            isYouLabel = new JLabel();

            setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
            setTitle("Name");
            setResizable(false);

            nameLabel.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
            nameLabel.setText(name);
            nameLabel.setToolTipText("");

            isYouLabel.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
            isYouLabel.setText(isYou?"You:":"Opponent:");

            GroupLayout layout = new GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(isYouLabel)
                        .addComponent(nameLabel))
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(isYouLabel)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(nameLabel)
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            
            pack();
        }// </editor-fold>

        // Variables declaration - do not modify                     
        private JLabel isYouLabel;
        private JLabel nameLabel;
        // End of variables declaration                   
    }

    /**
     * Creates and shows a TimeWindow
     * @param name the name of the player
     * @param isYou whether this player is you
     * @return the TimeWindow
     */
    public static JFrame showNameWindow(String name, boolean isYou) {
        //<editor-fold defaultstate="collapsed" desc="Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.LookAndFeelInfo[] installedLookAndFeels=UIManager.getInstalledLookAndFeels();
            for(UIManager.LookAndFeelInfo installedLookAndFeel : installedLookAndFeels) {
                if("Nimbus".equals(installedLookAndFeel.getName())) {
                    UIManager.setLookAndFeel(installedLookAndFeel.getClassName());
                    break;
                }
            }
        } catch(ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        JFrame frame = new GameWindows.NameWindow(name, isYou);
        if(frame.getWidth() < 220) {
            frame.setSize(220, frame.getHeight());
        }
        
        java.awt.EventQueue.invokeLater(() -> {
            frame.setVisible(true);
        });
        
        return frame;
    }
    
    /**
     * A Window that displays a name and a time.
     */
    private static class NameAndTimeWindow extends JFrame {

        /** Creates new form NameAndTimeWindow */
        public NameAndTimeWindow(String name, boolean isYou, TimeControl tc, boolean isWhite) {
            initComponents(name, isYou, tc, isWhite);
        }

        /** This method is called from within the constructor to
         * initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
        private void initComponents(String name, boolean isYou, TimeControl tc, boolean isWhite) {
            nameLabel = new JLabel();
            isYouLabel = new JLabel();
            jSeparator = new JSeparator();
            timeLabel = new JLabel();
            
            tc.addChangeListener(
                    (ChangeListener) (ObservableValue observable, Object oldValue, Object newValue) -> {
                timeLabel.setText(tc.toString(isWhite));
            });

            setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
            setTitle("Timers");
            setResizable(false);

            nameLabel.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
            nameLabel.setText(name);
            nameLabel.setToolTipText(isYou?"Your name":"Your opponent\'s name");

            isYouLabel.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
            isYouLabel.setText(isYou?"You:":"Opponent:");

            timeLabel.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
            timeLabel.setText("00:00.0");
            timeLabel.setToolTipText(isYou?"The time you have left"
                    :"The time your opponnet has left");

            GroupLayout layout = new GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(isYouLabel)
                        .addComponent(nameLabel)
                        .addComponent(timeLabel))
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(isYouLabel)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(nameLabel)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jSeparator, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(timeLabel)
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>

        // Variables declaration - do not modify                     
        private JLabel isYouLabel;
        private JLabel nameLabel;
        private JLabel timeLabel;
        private JSeparator jSeparator;
        // End of variables declaration                   
    }
    
    /**
     * Creates and shows a NameAndTimeWindow
     * @param name the name of the player
     * @param isYou whether the player is you
     * @param tc the TimeControl instance of this game
     * @param isWhite whether this player is white
     * @return the NameAndTimeWindow
     */
    public static JFrame showNameAndTimeWindow(String name, boolean isYou, TimeControl tc, boolean isWhite) {
        //<editor-fold defaultstate="collapsed" desc="Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.LookAndFeelInfo[] installedLookAndFeels=UIManager.getInstalledLookAndFeels();
            for(UIManager.LookAndFeelInfo installedLookAndFeel : installedLookAndFeels) {
                if("Nimbus".equals(installedLookAndFeel.getName())) {
                    UIManager.setLookAndFeel(installedLookAndFeel.getClassName());
                    break;
                }
            }
        } catch(ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        JFrame frame = new GameWindows.NameAndTimeWindow(name, isYou, tc, isWhite);
        if(frame.getWidth() < 220) {
            frame.setSize(220, frame.getHeight());
        }
        
        java.awt.EventQueue.invokeLater(() -> {
            frame.setVisible(true);
        });
        
        return frame;
    }
}